# /*
#  * Copyright (c) 2025 IBM Corporation
#  *
#  * SPDX-License-Identifier: Apache-2.0
#  *
#  *   Licensed under the Apache License, Version 2.0 (the "License");
#  *   you may not use this file except in compliance with the License.
#  *   You may obtain a copy of the License at
#  *
#  *       http://www.apache.org/licenses/LICENSE-2.0
#  *
#  *   Unless required by applicable law or agreed to in writing, software
#  *   distributed under the License is distributed on an "AS IS" BASIS,
#  *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  *   See the License for the specific language governing permissions and
#  *   limitations under the License.
#  *
#  */
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.applications.ingress.name }}
  namespace: {{ default "control-plane" .Release.Namespace }}
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.applications.ingress.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.applications.ingress.name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.applications.ingress.name }}
        date: "{{ now | unixEpoch }}"
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      automountServiceAccountToken: false
      volumes:
      - name: license-file
        configMap:
          name: {{ .Values.applications.ingress.name }}-config
      - name: certs
        secret:
          secretName: {{ .Values.secrets.certs.name }}
      containers:
      - image: {{ .Values.applications.ingress.imageName }}:{{ .Values.applications.ingress.imageTag  | default .Chart.AppVersion }}
        name: {{ .Values.applications.ingress.name }}
        volumeMounts:
        - name: license-file
          mountPath: /home
        - name: certs
          mountPath: /certs
          readOnly: true
        envFrom:
        - configMapRef:
            name: {{ .Values.applications.ingress.name }}-config
        imagePullPolicy: Always
        securityContext:
          runAsNonRoot: true
          runAsUser: 1724
        resources:
          limits:
            cpu: {{ .Values.applications.ingress.resources.limits.cpu }}
            memory: {{ .Values.applications.ingress.resources.limits.memory }}
          requests:
            cpu: {{ .Values.applications.ingress.resources.requests.cpu }}
            memory: {{ .Values.applications.ingress.resources.requests.memory }}
        ports:
          - containerPort: 8443
            name: http
          - containerPort: 8080
            name: internal
        readinessProbe:
          exec:
            command:
              - sh
              - -c
              - "curl -fk -s --cert /certs/in-cert.pem --key /certs/in-key.pem  https://localhost:8443/api/ingress/health/readiness || exit 1"
          initialDelaySeconds: 100
          periodSeconds: 20
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 15
        livenessProbe:
          exec:
            command:
              - sh
              - -c
              - "curl -fk -s --cert /certs/in-cert.pem --key /certs/in-key.pem  https://localhost:8443/api/ingress/health/liveness || exit 1"
          initialDelaySeconds: 100
          periodSeconds: 20
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 15
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
          - name: regcred
---
